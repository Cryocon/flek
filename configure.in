dnl # -*- sh -*-
dnl # Check for unique file

AC_INIT(Flek/Fl_App_Window.H)

AC_PROG_RANLIB

LIB_NAME_FLEK_CORE="libflek_core"
LIB_NAME_FLEK_UI="libflek_ui"
LIB_NAME_FLEK_GL="libflek_gl"
LIB_NAME_FLEK_XML="libflek_xml"
LIB_NAME_FLEK_JPEG="libflek_jpeg"

if test "$RANLIB" != ":"; then
  LIB_COMMAND="ar cr"
else
  LIB_COMMAND="ar crs"
fi

dnl # DSO_COMMAND_SH is a special version to work in flek-config
DSO_COMMAND="echo"

uname=`uname`
uversion=`uname -r | sed -e '1,$s/\.//g'`
if test "$uname" = "IRIX64"; then
    uname="IRIX"
fi

DEBUGFLAG=""
PICFLAG=0
CFLAGS="${CFLAGS:=}"
CXXFLAGS="${CXXFLAGS:=}"

case $uname in
    CYGWIN*)
        CFLAGS="$CFLAGS -DWIN32 -mno-cygwin"
        CXXFLAGS="$CXXFLAGS -DWIN32 -mno-cygwin"
        uname="CYGWIN"
        LDLIBS="-lgdi32 -luser32 -lmsvcrt -lwsock32 -mno-cygwin -mwindows"
        LDDLLLIBS="-lgdi32 -luser32 -lmsvcrt -lwsock32 -lopengl32 -lglu32"
        EXPORTCOMMAND="dlltool"
        ;;
    *)
        LDLIBS="-lX11 -lXext"
        ;;
esac

AC_SUBST(LDLIBS)
AC_SUBST(LDDLLLIBS)

AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],[if eval "test x$enable_debug = xyes"; then
  DEBUGFLAG="-g "
fi])

AC_ARG_ENABLE(shared, [  --enable-shared         turn on shared libraries [default=no]],[
if eval "test x$enable_shared = xyes"; then
  PICFLAG=1
  DSO_NAME_FLEK_CORE="libflek_core"
  DSO_NAME_FLEK_UI="libflek_ui"
  DSO_NAME_FLEK_GL="libflek_gl"
  DSO_NAME_FLEK_XML="libflek_xml"
  DSO_NAME_FLEK_JPEG="libflek_jpeg"
  case $uname in
      SunOS* | UNIX_S*)
	  DSOEXT=".so.1"
	  DSO_COMMAND="\$(CXX) -Wl,-h,\$@ \$(LDLIBS) -G $DEBUGFLAG -o"
	  ;;
      HP-UX*)
	  DSOEXT=".s1.1"
	  DSO_COMMAND="ld -b -z +h \$@ $DEBUGFLAG -o"
	  ;;
      OSF1*)
	  DSOEXT=".so.1"
          DSO_COMMAND="\$(CXX) -Wl,-soname,\$@ \$(LDLIBS) -shared $DEBUGFLAG -o"
cd 	  ;;
      IRIX*)
	  DSOEXT=".so.1"
          DSO_COMMAND="\$(CXX) -soname \$@ \$(LDLIBS) -shared $DEBUGFLAG -o"
	  ;;
      CYGWIN*)
	  DLLCFLAGS="-DFL_DLL -DFL_LIBRARY"
	  DSOEXT=".dll"
          DSO_COMMAND="dllwrap --export-all --target i386-mingw32 \
	--implib ../lib/libflek_coredll.1.a \
	--output-exp ../lib/libflek_coredll.1.exp \
	--driver-name \$(CXX)"
	  PICFLAG=0
	  ;;
      *)
          echo "Warning: shared libraries may not be supported.  Trying -shared"
	  echo "         option with compiler."
	  DSOEXT=".so.1"
          DSO_COMMAND="\$(CXX) -Wl,-soname,\$@ -shared $DEBUGFLAG -o"
	  ;;
  esac
fi])

dnl # Check for programs..

AC_PROG_CC
AC_PROG_CXX

AC_HEADER_DIRENT
AC_CHECK_HEADER(sys/select.h)
AC_CHECK_FUNCS(scandir,
    if test "$uname" != "SunOS"; then
        AC_DEFINE(HAVE_SCANDIR)
    fi)
AC_CHECK_FUNCS(vsnprintf,
    if test "$uname" != "HP-UX"; then
        AC_DEFINE(HAVE_VSNPRINTF)
    fi)
AC_CHECK_FUNCS(snprintf,
    if test "$uname" != "HP-UX"; then
        AC_DEFINE(HAVE_SNPRINTF)
    fi)
AC_CHECK_FUNCS(atol)
AC_CHECK_FUNCS(strcasecmp)
AC_CHECK_FUNCS(vsprintf)

AC_PATH_XTRA
echo "Ignoring libraries \"$X_PRE_LIBS\" requested by configure."
dnl# LIBS="$LIBS$X_LIBS$X_PRE_LIBS"
LIBS="$LIBS$X_LIBS"
CFLAGS="$CFLAGS $X_CFLAGS"
CPPFLAGS="$CPPFLAGS $X_CFLAGS"

AC_ARG_WITH([gl], 
  [  --with-gl=dir           specify the base GL dir if non-default (like /usr/X11R6/) ], 
  [ 
    GL_LIB="-L$withval/lib -lGLU -lGL"
    GL_INC="-I$withval/include"
  ], 
  [
    GL_LIB=""
    GL_INC=""
    
    dnl# My test to see if OpenGL is on this machine:
    if test "$uname" = "CYGWIN"
    then
      GL_LIB="-lopengl32 -lglu32"
      AC_DEFINE(HAVE_GL)
    else
      AC_CHECK_LIB(GL, glXMakeCurrent, AC_DEFINE(HAVE_GL) GL_LIB="-lGLU -lGL", \
          AC_CHECK_LIB(MesaGL,glXMakeCurrent, AC_DEFINE(HAVE_GL) GL_LIB="-lMesaGLU -lMesaGL",,\
              -lX11 -lXext $X_EXTRA_LIBS -lm), \
          -lX11 -lXext $X_EXTRA_LIBS -lm)
    fi
  ])

AC_ARG_WITH([xml], 
  [  --with-xml=dir          specify the base xml dir if non-default (like /usr/xml/)], 
  [ 
    XML_LIB="-L$withval/lib -lxml"
    XML_INC="-I$withval/include"
  ], 
  [
    XML_LIB=""
    XML_INC=""
    AC_CHECK_LIB(xml, xmlGetProp, AC_DEFINE(HAVE_XML) XML_LIB="-lxml",echo "libxml not found.  You will not be able to build libflek_xml.",)
  ])

AC_ARG_WITH([jpeg], 
  [  --with-jpeg=dir          specify the base jpeg dir if non-default (like /usr/jpeg/)], 
  [ 
    JPEG_LIB="-L$withval/lib -ljpeg"
    JPEG_INC="-I$withval/include"
  ], 
  [
    JPEG_LIB=""
    JPEG_INC=""
    AC_CHECK_LIB(jpeg, jpeg_stdio_src, AC_DEFINE(HAVE_JPEG) JPEG_LIB="-ljpeg",echo "libjpeg not found.  You will not be able to load jpeg images.",)
  ])


MAKEDEPEND="\$(CXX) -M"

dnl# add warnings to compiler switches:
dnl# do this last so messing with switches does not break tests
if test -n "$GXX"; then
    CFLAGS="-Wall $CFLAGS"
    CXXFLAGS="-Wall -Wno-return-type $CXXFLAGS"
    if test -z "$DEBUGFLAG"; then
        CFLAGS="-fomit-frame-pointer $CFLAGS"
        CXXFLAGS="-fno-exceptions -fomit-frame-pointer $CXXFLAGS"
        DEBUGFLAG="-O2"
    fi
    if test $PICFLAG = 1; then
        CFLAGS="-fPIC $CFLAGS"
        CXXFLAGS="-fPIC $CXXFLAGS"
    fi
else
    case `(uname) 2>/dev/null` in
        IRIX*)
            # Running some flavor of IRIX; see which version and
            # set things up according...
            if test "$uversion" -ge 62; then
                # We are running IRIX 6.2 or higher; uncomment the following
                # lines if you don't have IDO 7.2 or higher:
                #
                #     CXX="CC -n32"
                #     CC="cc -n32"
                #     LD="ld -n32"
                #     MAKEDEPEND="CC -M"

                CFLAGS="-fullwarn $CFLAGS"
                CXXFLAGS="-fullwarn $CXXFLAGS"
                if test -z "$DEBUGFLAG"; then
                    DEBUGFLAG="-O2 -OPT:Olimit=3000"
                fi
            else
                CXXFLAGS="+w +pp $CXXFLAGS"
                if test -z "$DEBUGFLAG"; then
                    DEBUGFLAG="-O2 -Olimit=3000"
                fi
            fi
            ;;
        HP-UX*)
            # Running HP-UX; these options should work for the HP compilers.
            if test -z "$DEBUGFLAG"; then
                DEBUGFLAG="+O2"
            fi
            ;;
        SunOS*)
            # Solaris
            if test -z "$DEBUGFLAG"; then
                DEBUGFLAG="-O"
            fi
            if test $PICFLAG = 1; then
                CFLAGS="-KPIC $CFLAGS"
                CXXFLAGS="-PIC $CXXFLAGS"
            fi
            ;;
        *)
            # Running some other operating system; inform the user they
            # should contribute the necessary options to fltk-bugs@easysw.com...
            echo "Building FLTK with default compiler optimizations; contact"
            echo "fltk-bugs@easysw.com with uname and compiler options needed"
            echo "for your platform, or set the CFLAGS and CXXFLAGS options"
           echo "before running configure."
            ;;
    esac
fi

CFLAGS="$DEBUGFLAG $CFLAGS"
CXXFLAGS="$DEBUGFLAG $CXXFLAGS"
PREFIX=${prefix}
AC_SUBST(DEBUGFLAG)

if test "$PREFIX" = "NONE"; then
    AC_DEFINE_UNQUOTED(CONFIGDIR, "${ac_default_prefix}/lib/fltk")
else
    AC_DEFINE_UNQUOTED(CONFIGDIR, "${prefix}/lib/fltk")
fi

dnl All tests done with the C++ compiler...
AC_LANG_CPLUSPLUS

FLTK_DIR=""
FLTK_LIB=""
FLTK_INC=""
FLTK_FLAGS=""

AC_ARG_WITH([fltk-dir], 
  [  --with-fltk-dir=dir     specify the Fltk source dir], 
  [ 
    FLTK_DIR="$withval"
    FLTK_LIB="-L$withval/lib -lfltk"
    FLTK_INC="-I$withval"
  ], 
  [
#    FLTK_LIB=""
#    AC_CHECK_LIB(fltk,numericsort, AC_DEFINE(HAVE_FLTK) FLTK_LIB="-lfltk","** Fltk not found.  You will not be able to build libflek_ui or libflek_gl.",)

AC_ARG_WITH([fltk], 
  [  --with-fltk=dir         specify the directory where fltk is installed. ], 
  [ 
    FLTK_DIR="$withval"
    FLTK_LIB="-L$withval/lib -lfltk"
    FLTK_INC="-I$withval/include"
  ], 
  [
    FLTK_LIB=""
    AC_CHECK_LIB(fltk,numericsort, AC_DEFINE(HAVE_FLTK) FLTK_LIB="-lfltk","** Fltk not found.  You will not be able to build libflek_ui or libflek_gl.",)
  ])



  ])



AC_ARG_WITH([fltk2], 
  [  --with-fltk2            Use Fltk 2.0 instead of Fltk 1.0x. ], 
  [ 
    FLTKFLAGS="-DFLTK_2"
  ], [])

AC_SUBST(HAVEGL)
AC_SUBST(GL_LIB)
AC_SUBST(GL_INC)

AC_SUBST(XML_LIB)
AC_SUBST(XML_INC)

AC_SUBST(HAVE_JPEG)
AC_SUBST(JPEG_LIB)
AC_SUBST(JPEG_INC)

AC_SUBST(FLTK_DIR)
AC_SUBST(FLTK_LIB)
AC_SUBST(FLTK_INC)
AC_SUBST(FLTKFLAGS)

AC_SUBST(LIB_NAME_FLEK_CORE)
AC_SUBST(LIB_NAME_FLEK_UI)
AC_SUBST(LIB_NAME_FLEK_GL)
AC_SUBST(LIB_NAME_FLEK_XML)
AC_SUBST(LIB_NAME_FLEK_JPEG)

AC_SUBST(DSO_NAME_FLEK_CORE)
AC_SUBST(DSO_NAME_FLEK_UI)
AC_SUBST(DSO_NAME_FLEK_GL)
AC_SUBST(DSO_NAME_FLEK_XML)
AC_SUBST(DSO_NAME_FLEK_JPEG)

AC_SUBST(DSOEXT)
AC_SUBST(DSO_COMMAND)
AC_SUBST(LIB_COMMAND)
AC_SUBST(MAKEDEPEND)
AC_SUBST(DLLCFLAGS)

AC_OUTPUT(makeinclude flek-config)

chmod +x flek-config

dnl#
dnl# End of "$Id: configure.in,v 1.14 2000/05/01 04:11:05 jamespalmer Exp $".
dnl#
